a:21:{s:5:"refid";s:5:"I4349";s:10:"ref_father";s:1:"V";s:10:"ref_mother";s:1:"M";s:8:"ref_wife";s:2:"EF";s:11:"ref_husband";s:2:"EM";s:7:"ref_son";s:1:"S";s:12:"ref_daughter";s:1:"T";s:8:"preamble";s:1119:"\documentclass[10pt, twocolumn]{book}
\usepackage{fontspec,paralist,graphicx,grffile}
\setmainfont{Times New Roman}
\newfontfamily\DejaVuSans{DejaVu Sans}
\DeclareTextFontCommand{\dejavu}{\DejaVuSans}
\newfontfamily\Quivira{Quivira}
\DeclareTextFontCommand{\quivira}{\Quivira}
\newfontfamily\Segoe{Segoe UI Symbol}
\DeclareTextFontCommand{\segoe}{\Segoe}

\usepackage[ngerman]{babel} % deutsche Silbentrennung
\usepackage{makeidx} % fuer Stichwortverzeichnis
\addto\captionsngerman{\renewcommand{\bibname}{Quellenverzeichnis}}% only needed without biblatex
\makeindex

\usepackage[citecounter=true,backend=bibtex8,sorting=none]{biblatex} % use biblatex to include counter
\renewcommand{\finentrypunct}{%
  \addperiod\space
  (\arabic{citecounter}~Mal zitiert)%
}
\bibliography{\jobname} % include bibliography here when using biblatex

\makeatletter
% maximal width for includegraphics
\def\maxwidth#1{\ifdim\Gin@nat@width>#1 #1\else\Gin@nat@width\fi}
\makeatother
\renewcommand{\bibname}{Quellenangabe}
\setlength{\columnsep}{2cm}
% make sure you use XeLaTex because UTF8 symbols are used
";s:5:"title";s:1240:"\begin{document}
\frontmatter
\begin{titlepage}
	{\centering
	\vspace{2cm}
	\rule[-2ex]{0.7\textwidth}{1pt} \rule[2ex]{0.7\textwidth}{1pt} \par
	\vspace{0.5cm}
	{\scshape\Large Personenverzeichnis der\par}
	\vspace{0.5cm}
	{\huge\bfseries Familie Oest\par}
	\vspace{0.5cm}
	{\scshape\Large und verbundener Familien mit Verwandtschaftsbezug auf\par}
	{\Large\itshape Thorsten Oest\par}
	\vspace{0.5cm}
	\rule[-2ex]{0.7\textwidth}{1pt} \rule[2ex]{0.7\textwidth}{1pt} \par
	\vfill
	\includegraphics[width=0.25\textwidth]{{{C:/xampp/htdocs/webtrees/data/media/Oest/P1160456}}} \par
	\vfill
	{\large www.oest.family\par}
	\vspace{0.5cm}
% Bottom of the page
	{\large \today\par}}
	\newpage
	\vspace*{\fill}
	Die Geschichte der Familie Oest ist durch Beiträge vieler Familienmitglieder umfangreich dokumentiert. Das hier zusammengestellte Personenverzeichnis basiert im Wesentlichen auf diesen Arbeiten. Auf die genutzte Primär- und Sekundärquellen wird im Quellenverzeichnis referenziert.  Für eine ereignisbezogene Quellenangabe sei auf die detailliertere Dokumentation unter www.oest.family verwiesen. 
\end{titlepage}

\tableofcontents 
\chapter{Legende}\GedcomLegende

\setlength\parindent{0pt}
\mainmatter";s:26:"individuals_label_template";s:2063:"<>@&
<\makebox[0pt][r]{@Ancestor&\segoe{👤} &\segoe{👪} @}>\textbf{@SurName@<, @FactTITL@ @GivenName@ @NickName@>}<\textsuperscript{@Id&gen_no@}>
<\index{@SurName@<, @GivenName@><\textsuperscript{@Id&gen_no@}><*@BirthDate&%Y@>}>
@ForeachReference@
<\cite{@FeReferenceName@}>
@EndForeach@

\\*
<<*@BirthDate@ <in @BirthPlace@> >
<\dejavu{†}@DeathDate@ <in @DeathPlace@>>\\ >
<\quivira{👥}~<@FatherGivenName&1@ >@FatherSurName@<\textsuperscript{@FatherId&gen_no@}>>< und <@MotherGivenName&1@ >@MotherSurName@<\textsuperscript{@MotherId&gen_no@}>\\* >

@ForeachFAMS@ \dejavu{⚭}@Marriage@@MarriageDate@ @SpouseGivenName&1@ @SpouseSurName@<\textsuperscript{@SpouseId&gen_no@}>:
<\begin{compactenum}@ForeachChildren@ \item <@GivenName&1@ >@SurName@<\textsuperscript{@Id&gen_no@}>
< *@BirthDate@>>< \dejavu{†}@DeathDate@>
@EndForeach@\end{compactenum}>@Replace&:&\\@ @EndForeach@

@ForeachFactOuter&NAME,BIRT,DEAT@@ForeachFactInner@@FeFactType&IfExist@ 
@ForeachAttributeOuter&ADDR,AGNC@@FeFactAttribute@@EndForeach@ <\dejavu{✎}\textit{ @FeFactNote@}> \\ @EndForeach@@EndForeach@

@ForeachFactOuter&CAST,CHR,BAPM,BURI,ADOP,NCHI,NMR,EDUC,GRAD,OCCU,_MILI,RETI,RESI,PROP,_MEDC,NATI,EMIG,RELI,CONF,FACT,EVEN,WWW,DSCR@@ForeachFactInner@ @FeFactType&IfExist&&:@ @FeFactValue@ @FeFactDate@  <in @FeFactPlace@>
@ForeachAttributeOuter&AGNC,ADDR,PHON,CAUS,TYPE,AGE@@FeAttributeType&IfExist&, &:@ @FeFactAttribute@@EndForeach@ <\dejavu{✎}\textit{ @FeFactNote@}>\\ @EndForeach@ @EndForeach@

@ForeachFactOuter&NOTE@@ForeachFactInner@ @FeFactType&IfExist@ \textit{@FeFactValue@}\\ @EndForeach@@EndForeach@

<Verwandtschaft: @Reference@\\>

<\segoe{📷} 
@ForeachMedia&photo&jpg,png,pdf@
\ref{fig:@FeMediaId@}
@EndForeach@>
@Remove&\\*&\\@

@ForeachMedia&photo&jpg,png,pdf&unique@
<\begin{figure}[h!]\centering
\includegraphics[width=\maxwidth{\columnwidth}]{{{C:/xampp/htdocs/webtrees/data/media/@FeMediaFile&NoExtension@}}} 
<\caption{@FeMediaCaption@}>
\label{fig:@FeMediaId@}
\end{figure}>
@EndForeach@

\bigskip
\par

";s:6:"epilog";s:117:"%\bibliographystyle{plain}
%\bibliography{\jobname}
\printbibliography
\listoffigures
\printindex
\end{document}";s:12:"branch_seeds";s:111:";I4349;Hauptline;both
I2871;Vorfahren von Käthe Prigge;ancestors
I4725;Nachfahren von Peter Oest;descendants";s:7:"symbols";s:552:";Direkter Vor- oder Nachfahre (V-Vater, M-Mutter, S-Sohn, T-Tochter, EM-Ehemann, EF-Ehefrau);\segoe{👤};L
Direkter Nachfahre eines direkten Vorfahren;\segoe{👪};L
CAST;\quivira{🜲}
BIRT@*@L
CHR;\quivira{〰};L
DEAT;\dejavu{†};L
BURI;\dejavu{▯};L
RELI;\quivira{⛪};L
EDUC;\segoe{🎓};L
OCCU;\dejavu{⚒};L
AGNC;\quivira{🏭};L
RESI;\quivira{🏠};L
ADDR;\quivira{✉};L
PHON;\dejavu{☏};L
PROP;\segoe{💰};L
PLAC;in
_MILI;\dejavu{⚔};L
_MEDC;\segoe{💉};L
NOTE;\dejavu{✎};L
DSCR;\segoe{📖};L
WWW;\quivira{🌍};L";s:13:"include_media";s:0:"";s:13:"exclude_media";s:9:"M112,M108";s:19:"default_date_format";s:8:"%j.%n.%Y";s:20:"default_place_format";s:16:"1,-1/Deutschland";s:16:"hierarchy_branch";s:28:"\chapter{Personenverzeichnis";s:20:"hierarchy_sub_branch";s:9:"\section{";s:20:"hierarchy_generation";s:23:"\subsection*{Generation";s:15:"post_mod_action";s:23:"download_settings_latex";}